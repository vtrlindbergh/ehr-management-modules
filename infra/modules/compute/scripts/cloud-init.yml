#cloud-config

# Cloud-init configuration for Hyperledger Fabric nodes
# VM Role: ${vm_role}

package_update: true
package_upgrade: true

packages:
  - docker.io
  - docker-compose
  - git
  - curl
  - jq
  - unzip
  - wget
  - htop
  - tree
  - golang-go
  - build-essential

# Configure Docker
runcmd:
  # Add user to docker group
  - usermod -aG docker ${admin_username}
  
  # Enable and start Docker
  - systemctl enable docker
  - systemctl start docker
  
  # Format and mount data disk
  - mkfs.ext4 /dev/sdc
  - mkdir -p /opt/hyperledger
  - mount /dev/sdc /opt/hyperledger
  - echo '/dev/sdc /opt/hyperledger ext4 defaults 0 2' >> /etc/fstab
  - chown -R ${admin_username}:${admin_username} /opt/hyperledger
  
  # Install Docker Compose (latest version)
  - curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - chmod +x /usr/local/bin/docker-compose
  
  # Create hyperledger directories (fixed directory creation)
  - mkdir -p /opt/hyperledger/fabric-samples
  - mkdir -p /opt/hyperledger/chaincode
  - mkdir -p /opt/hyperledger/config
  - mkdir -p /opt/hyperledger/crypto-config
  - mkdir -p /opt/hyperledger/logs
  - chown -R ${admin_username}:${admin_username} /opt/hyperledger
  
  # Install Hyperledger Fabric binaries and Docker images
  - cd /opt/hyperledger
  - curl -sSL https://bit.ly/2ysbOFE | bash -s -- 2.4.9 1.5.2
  - chown -R ${admin_username}:${admin_username} /opt/hyperledger
  
  # Set up environment for Hyperledger Fabric
  - echo 'export PATH=$PATH:/opt/hyperledger/fabric-samples/bin' >> /home/${admin_username}/.bashrc
  - echo 'export FABRIC_CFG_PATH=/opt/hyperledger/config' >> /home/${admin_username}/.bashrc
  - echo 'export GOPATH=/home/${admin_username}/go' >> /home/${admin_username}/.bashrc
  - echo 'cd /opt/hyperledger' >> /home/${admin_username}/.bashrc
  
  # Create Go workspace
  - mkdir -p /home/${admin_username}/go/src /home/${admin_username}/go/bin /home/${admin_username}/go/pkg
  - chown -R ${admin_username}:${admin_username} /home/${admin_username}/go

# Create a marker file to indicate cloud-init completion
write_files:
  - path: /opt/hyperledger/cloud-init-complete
    content: |
      Cloud-init setup completed at $(date)
      VM Role: ${vm_role}
      Docker installed and configured
      Go language installed
      Hyperledger Fabric binaries installed
      Hyperledger directories created
      Ready for blockchain development
    permissions: '0644'
    owner: ${admin_username}:${admin_username}

final_message: "Hyperledger Fabric VM (${vm_role}) setup completed. Docker is ready, and Hyperledger directories are prepared."